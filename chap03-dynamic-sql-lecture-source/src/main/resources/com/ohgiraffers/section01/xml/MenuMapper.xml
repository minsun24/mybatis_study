<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.MenuMapper">
    <resultMap type="com.ohgiraffers.section01.xml.MenuDTO" id="menuResultMap">
        <id property="menuCode" column="MENU_CODE"/>
        <result property="menuName" column="MENU_NAME"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <!--  설명
            OGNL(Object Graph Navigation Language)
            : single quatation(''') 구간의 값은 리터럴 값으로 보고 그게 아닌 이름은 객체의 필드 또는 변수명ㅇ으로
              인식하게 작성하는 기법
           -
           설명.
            1. gte(>=): greater than equal
            2. gt (>) : greater than
            3. lte(<=) : less than equal
            4. lt(<) : less than
            5. eq(==) : equal
            6. neq(!=) : not eul
    -->

    <!--  목차. 1. IF 문    -->
    <select id="selectMenuByPrice" parameterType="_int" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="maxPrice gte 0 and maxPrice lte 10000">
            <![CDATA[
           AND A.MENU_PRICE < #{maxPrice}
           ]]>
        </if>
        <if test="maxPrice gt 10000 and maxPrice lte 20000">
            AND A.MENU_PRICE BETWEEN 10000 AND #{maxPrice}
        </if>
        <if test="maxPrice gt 20000 and maxPrice lte 30000">
            AND A.MENU_PRICE BETWEEN 20000 AND #{maxPrice}
        </if>
        <if test="maxPrice gt 30000">
            AND A.MENU_PRICE BETWEEN 30000 AND #{maxPrice}
        </if>
    </select>

    <!--
              - 메뉴테이블에는 카테고리명이 없기 때문에 join 필요
              - SearchCriteria의 필드를 인식함.
        -->
    <select id="searchMenu" parameterType="com.ohgiraffers.section01.xml.SearchCriteria"
            resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        WHERE ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND A.MENU_NAME LIKE CONCAT('%', #{value}, '%')
        </if>
        <if test="condition == 'category'">
            AND B.CATEGORY_NAME = #{value}
        </if>
        ORDER BY 1 DESC
    </select>

    <!--  목차. 2. CHOOSE, WHEN 문    -->
    <select id="searchMenuBySupCategory"
            parameterType="com.ohgiraffers.section01.xml.SearchCriteria"
            resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value == '식사'">
                AND A.CATEGORY_CODE IN (4, 5, 6, 7)
            </when>
            <when test="value == '음료'">
                AND A.CATEGORY_CODE IN (8, 9, 10)
            </when>
            <when test="value == '디저트'">
                AND A.CATEGORY_CODE IN (11, 12)
            </when>
        </choose>
    </select>

    <!--  목차. 3. FOR-EACH 문    -->
    <select id="searchMenuByRandomMenuCode" parameterType="list" resultMap="menuResultMap">
        SELECT
            A.MENU_CODE
            , A.MENU_NAME
            , A.MENU_PRICE
            , A.CATEGORY_CODE
            , A.ORDERABLE_STATUS
            FROM TBL_MENU A
        WHERE A.MENU_CODE IN
        <foreach collection="list"
                 item="menuCode" open="(" close=")" separator=", ">
            #{menuCode}
        </foreach>
    </select>

    <select id="searchMenuByCodeOrSearchAll" parameterType="com.ohgiraffers.section01.xml.SearchCriteria"
            resultMap="menuResultMap">
        SELECT
            A.MENU_CODE
            , A.MENU_NAME
            , A.MENU_PRICE
            , A.CATEGORY_CODE
            , A.ORDERABLE_STATUS
            FROM TBL_MENU A
        <if test="condition != null and condition == 'menuCode'">
            WHERE A.MENU_CODE = ${value}
        </if>
    </select>

    <!--  목차. 4. WHERE, TRIM 문    -->
    <select id="searchMenuByNameOrCategory" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
                A.MENU_CODE
                , A.MENU_NAME
                , A.MENU_PRICE
                , A.CATEGORY_CODE
                , A.ORDERABLE_STATUS
            FROM TBL_MENU A
<!-- 필기.  test=""의 변수로 사용할 수 있는 것들  => 변수명, 필드명, map의 key 값   -->

<!--        <if test="nameValue != null">-->
<!--            WHERE A.MENU_NAME LIKE CONCAT('%', #{nameValue}, '%')-->
<!--        </if>-->
<!--        <if test="categoryCode != null">-->
<!--            WHERE A.CATEGORY_CODE = #{categoryCode}-->
<!--        </if>-->
<!--  nameValue 조건, categoryCode 조건 각각 별도의 where로 처리할 때는 상관 없지만
              둘 다 null이 아닐 때를 판별하기 위해서는? (and)
              => where 태그 사용
-->
<!--        필기. where 태그 -->
<!--        <where>-->
<!--            <if test="nameValue != null">-->
<!--                A.MENU_NAME LIKE CONCAT('%', #{nameValue}, '%')-->
<!--            </if>-->
<!--            <if test="categoryCode != null">-->
<!--                AND A.CATEGORY_CODE = #{categoryCode}-->
<!--            </if>-->
<!--        </where>-->
<!--        필기. trim 태그 (where태그처럼 사용) -->
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="nameValue != null">
                A.MENU_NAME LIKE CONCAT('%', #{nameValue}, '%')
            </if>
            <if test="categoryCode != null">
                AND A.CATEGORY_CODE = #{categoryCode}
            </if>
        </trim>
    </select>

<!--    필기. DML (resultType을 사용할 필요 없음) -->
    <!--  목차. 5. SET 태그    -->
<!--    한 가지 속성만 업데이트하고 싶다면?
        SET (V1, V2, ...) 대신 <set></set> 태그 사용 -->
    <update id="updateMenu" parameterType="hashmap">
        UPDATE
                TBL_MENU
        <set>
            <if test="menuName != null and menuName != ''">
                       MENU_NAME = #{menuName}
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                , ORDERABLE_STATUS = #{orderableStatus}
            </if>
        </set>
            <!--  필기. trim 태그로도 사용 가능      -->
<!--            <trim prefix="SET" prefixOverrides=",">-->
<!--                <if test="menuName != null and menuName != ''">-->
<!--                    MENU_NAME = #{menuName}-->
<!--                </if>-->
<!--                <if test="orderableStatus != null and orderableStatus != ''">-->
<!--                    ORDERABLE_STATUS = #{orderableStatus}-->
<!--                </if>-->
<!--            </trim>-->
          WHERE MENU_CODE = #{menuCode}
    </update>

</mapper>